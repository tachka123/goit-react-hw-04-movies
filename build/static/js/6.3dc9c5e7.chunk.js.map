{"version":3,"sources":["api/api.js","components/MovieItem/movieItem.module.css","components/CastAndReviews/Cast.jsx","components/CastAndReviews/Reviews.jsx","components/MovieItem/MovieItem.jsx","views/MovieDetailsPage.jsx"],"names":["API_KEY","getPopular","a","axios","get","results","data","getBySearch","search","getById","id","getReviews","getCast","module","exports","Сast","state","cast","this","props","setState","length","map","character","cast_id","profile_path","key","src","alt","Component","Reviews","author","content","MovieItem","match","url","params","result","poster_path","original_title","overview","movieId","className","Style","item","h2","mainInfo","to","type","exact","path","render","Cast","MovieDetailsPage"],"mappings":"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","file":"static/js/6.3dc9c5e7.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'api_key=37fb2304dd695f53d243740619b61ce9';\n\nexport async function getPopular() {\n  const {\n    data: { results },\n  } = await axios.get(\n    `https://api.themoviedb.org/3/movie/popular?${API_KEY}&language=en-US&page=1`,\n  );\n  return results;\n}\n\nexport async function getBySearch(search) {\n  const {\n    data: { results },\n  } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${search}&${API_KEY}`,\n  );\n  return results;\n}\n\nexport async function getById(id) {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?${API_KEY}&language=en-US`,\n  );\n  return data;\n}\n\nexport async function getReviews(id) {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?${API_KEY}&language=en-US&page=1`,\n  );\n  return data;\n}\n\nexport async function getCast(id) {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?${API_KEY}`,\n  );\n  return data;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"movieItem_item__M-N1T\",\"h2\":\"movieItem_h2__1rGlC\",\"mainInfo\":\"movieItem_mainInfo__328p_\"};","import React, { Component } from 'react';\nimport { getCast } from '../../api/api';\n\nclass Сast extends Component {\n  state = {\n    cast: [],\n  };\n\n  async componentDidMount() {\n    const { cast } = await getCast(this.props.id);\n    this.setState({ cast });\n  }\n\n  render() {\n    const { cast } = this.state;\n    return (\n      <ul>\n        {cast.length > 0 ? (\n          cast.map(({ character, cast_id, profile_path }) => (\n            <li key={cast_id}>\n              <br />\n              <img\n                src={`http://image.tmdb.org/t/p/w200/${profile_path}`}\n                alt=\"\"\n              />\n              <br />\n              {character}\n              <br />\n            </li>\n          ))\n        ) : (\n          <span>There no info about casts</span>\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default Сast;\n","import React, { Component } from 'react';\nimport { getReviews } from '../../api/api';\n\nclass Reviews extends Component {\n  state = {\n    results: [],\n  };\n\n  async componentDidMount() {\n    const { results } = await getReviews(this.props.id);\n    this.setState({ results });\n  }\n\n  render() {\n    const { results } = this.state;\n    return (\n      <ul>\n        {results.length > 0 ? (\n          results.map(({ author, content, id }) => (\n            <li key={id}>\n              {author} <br /> <span>{content}</span>\n            </li>\n          ))\n        ) : (\n          <span>There no Reviews</span>\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default Reviews;\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport T from 'prop-types';\nimport Style from './movieItem.module.css';\nimport Cast from '../CastAndReviews/Cast';\nimport Reviews from '../CastAndReviews/Reviews';\n\nconst MovieItem = ({\n  match: { url, params },\n  result: { poster_path, original_title, overview },\n}) => {\n  const { movieId } = params;\n  return (\n    <div className={Style.item}>\n      <h2 className={Style.h2}>{original_title}</h2>\n      <img src={`http://image.tmdb.org/t/p/w200/${poster_path}`} alt=\"\" />\n      <span className={Style.mainInfo}>{overview}</span>\n      <div>Additional information</div>\n      <Link to={`${url}/reviews`}>\n        <button type=\"button\">Reviews</button>\n      </Link>\n      <Link to={`${url}/cast`}>\n        <button type=\"button\">Cast</button>\n      </Link>\n      <Switch>\n        <Route exact path={`${url}`} />\n        <Route\n          path={`${url}/cast`}\n          render={props => <Cast {...props} id={movieId} />}\n        />\n        <Route\n          path={`${url}/reviews`}\n          render={props => <Reviews {...props} id={movieId} />}\n        />\n      </Switch>\n    </div>\n  );\n};\n\nMovieItem.propTypes = {\n  match: T.shape({ url: T.string, params: T.shape({ movieId: T.string }) })\n    .isRequired,\n  result: T.shape({\n    poster_path: T.string,\n    original_title: T.string,\n    overview: T.string,\n  }).isRequired,\n};\n\nexport default MovieItem;\n","import React, { Component } from 'react';\nimport T from 'prop-types';\nimport { getById } from '../api/api';\nimport MovieItem from '../components/MovieItem/MovieItem';\n\nclass MovieDetailsPage extends Component {\n  static propTypes = {\n    match: T.shape({\n      params: T.shape({\n        movieId: T.string,\n      }),\n      url: T.string,\n    }).isRequired,\n  };\n\n  state = {\n    result: {},\n  };\n\n  async componentDidMount() {\n    const { movieId } = this.props.match.params;\n    const result = await getById(movieId);\n    this.setState({ result });\n  }\n\n  render() {\n    const { result } = this.state;\n    const { match } = this.props;\n    return <MovieItem match={match} result={result} />;\n  }\n}\n\nexport default MovieDetailsPage;\n"],"sourceRoot":""}